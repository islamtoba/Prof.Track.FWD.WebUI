<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="11" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-19T12:08:19 EET" name="Default suite" finished-at="2024-01-19T12:10:44 EET" duration-ms="144784">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-01-19T12:08:19 EET" name="Default test" finished-at="2024-01-19T12:10:44 EET" duration-ms="144784">
      <class name="org.example.testRunner.Runner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:08:19 EET" name="setUpClass" finished-at="2024-01-19T12:08:20 EET" duration-ms="506" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1b409a79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:08:20 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:08:33 EET" duration-ms="12634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user Register successfully"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User could register with valid data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:08:33 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:08:41 EET" duration-ms="8701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user login successfully"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User could log in with valid email and password"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:08:41 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:08:50 EET" duration-ms="8403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user couldn't login successfully"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User could log in with valid email and password"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:08:50 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:09:03 EET" duration-ms="12868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Logged User could switch between currencies US-Euro"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["switching between currencies US-Euro"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:09:03 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:09:15 EET" duration-ms="12077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Logged User could search for any product"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User could search for any product"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:09:15 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:09:26 EET" duration-ms="11404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Logged user could select different Categories"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["the Logged user could select any different Categories in the system"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:09:26 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:09:32 EET" duration-ms="6213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["The links on slider page should working"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["The links on slider page should working"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:09:32 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:09:39 EET" duration-ms="7128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["The links on slider page should working"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["The links on slider page should working"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:09:39 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:09:53 EET" duration-ms="13435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["the Social media links should be working"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["the User can follow us on different Social media"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:09:53 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:10:06 EET" duration-ms="13702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["the Social media links should be working"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["the User can follow us on different Social media"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:10:06 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:10:20 EET" duration-ms="13796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["the Social media links should be working"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["the User can follow us on different Social media"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:10:20 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:10:29 EET" duration-ms="8745" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["the Social media links should be working"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["the User can follow us on different Social media"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at org.example.stepDefs.D07_FollowUsStepDef.user_verify_that_something_for_every_social_correct(D07_FollowUsStepDef.java:44)
at ✽.user verify that "https://www.rss.com/user/nopCommerce" for every social correct(file:///C:/Users/islam/OneDrive/Desktop/selinum/WebDemoNopCommerce_Automation-master/Final%20Project%20Sele/src/main/resources/features/F07_FollowUs.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:10:29 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-19T12:10:44 EET" duration-ms="14896" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Logged user could add different products to Wishlist"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Logged user could add different products to Wishlist"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[@class='content']"}
  (Session info: chrome=120.0.6099.218)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.0', revision: '15400459dd*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [77c4457e15fb28408b4c67448a3d9e49, findElement {using=xpath, value=//p[@class='content']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.218, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\islam\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:29322}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:29322/devtoo..., se:cdpVersion: 120.0.6099.218, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 77c4457e15fb28408b4c67448a3d9e49]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[@class='content']"}
  (Session info: chrome=120.0.6099.218)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.0', revision: '15400459dd*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [77c4457e15fb28408b4c67448a3d9e49, findElement {using=xpath, value=//p[@class='content']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.218, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\islam\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:29322}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:29322/devtoo..., se:cdpVersion: 120.0.6099.218, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 77c4457e15fb28408b4c67448a3d9e49
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy26.getText(Unknown Source)
at org.example.stepDefs.D08_WishListStepDef.the_system_show_green_success_message(D08_WishListStepDef.java:32)
at ✽.the system show green success message(file:///C:/Users/islam/OneDrive/Desktop/selinum/WebDemoNopCommerce_Automation-master/Final%20Project%20Sele/src/main/resources/features/F08_WishList1.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:org.example.testRunner.Runner@3f191845]" started-at="2024-01-19T12:10:44 EET" name="tearDownClass" finished-at="2024-01-19T12:10:44 EET" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- org.example.testRunner.Runner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
